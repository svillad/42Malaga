services:
  mariadb:
    build:
      context: ./requirements/mariadb
    image: ${MARIADB_IMAGE}
    container_name: mariadb
    env_file:
      - .env
    secrets:
      - db_password
      - db_root_password
    environment:
      - MARIADB_PASSWORD_FILE=/run/secrets/db_password
      - MARIADB_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
    volumes:
      - wp_db:/var/lib/mysql
    restart: unless-stopped
    networks:
      - stack_net

  adminer:
    build:
      context: ./requirements/bonus/adminer
    image: ${ADMINER_IMAGE}
    container_name: adminer
    env_file:
      - .env
    depends_on:
      - mariadb
    restart: unless-stopped
    networks:
      - stack_net

  wordpress:
    build:
      context: ./requirements/wordpress
    image: ${WORDPRESS_IMAGE}
    container_name: wordpress
    env_file:
      - .env
    secrets:
      - wp_admin_password
      - wp_user_password
      - db_password
      - redis_password
    environment:
      - WORDPRESS_ADMIN_PASS_FILE=/run/secrets/wp_admin_password
      - WORDPRESS_USER_PASS_FILE=/run/secrets/wp_user_password
      - MARIADB_PASSWORD_FILE=/run/secrets/db_password
      - REDIS_PASS_FILE=/run/secrets/redis_password
    volumes:
      - wp_data:/var/www/html
    depends_on:
      - mariadb
      - redis
    restart: unless-stopped
    networks:
      - stack_net

  nginx:
    build:
      context: ./requirements/nginx
    image: ${NGINX_IMAGE}
    container_name: nginx
    env_file:
      - .env
    ports:
      - 443:443
    volumes:
      - ./requirements/nginx/certs:/etc/nginx/certs
      - wp_data:/var/www/html:ro
    depends_on:
      - wordpress
      - adminer
    restart: unless-stopped
    networks:
      - stack_net

  ftp-server:
    build:
      context: ./requirements/bonus/ftp-server
    image: ${FTP_IMAGE}
    container_name: ftp-server
    env_file:
      - .env
    secrets:
      - ftp_password
    environment:
      - FTP_PASS_FILE=/run/secrets/ftp_password
    ports:
      - "${FTP_PORT}:21"
      - "21000-21010:21000-21010"
    volumes:
      - wp_data:/var/www/html
    restart: unless-stopped
    networks:
      - stack_net

  website:
    build:
      context: ./requirements/bonus/website
    image: ${WEBSITE_IMAGE}
    container_name: website
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - stack_net

  redis:
    build:
      context: ./requirements/bonus/redis
    image: ${REDIS_IMAGE}
    container_name: redis
    env_file:
      - .env
    secrets:
      - redis_password
    environment:
      - REDIS_PASS_FILE=/run/secrets/redis_password
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - stack_net
      
volumes:
  wp_db:
    name: $WORDPRESS_DB_VOLUME
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $HOST_DATA_DIR/${WORDPRESS_DB_VOLUME}
  wp_data:
    name: $WORDPRESS_DATA_VOLUME
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $HOST_DATA_DIR/${WORDPRESS_DATA_VOLUME}
  redis_data:
    name: $REDIS_DATA_VOLUME
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $HOST_DATA_DIR/${REDIS_DATA_VOLUME}

networks:
  stack_net:
    name: ${STACK_NETWORK}
    driver: bridge

secrets:
  db_password:
    file: ../secrets/db_password.txt
  db_root_password:
    file: ../secrets/db_root_password.txt
  wp_admin_password:
    file: ../secrets/wp_admin_password.txt
  wp_user_password:
    file: ../secrets/wp_user_password.txt
  ftp_password:
    file: ../secrets/ftp_password.txt
  redis_password:
    file: ../secrets/redis_password.txt