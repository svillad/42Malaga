services:
  mariadb:
    build:
      context: ./requirements/mariadb
    image: ${MARIADB_IMAGE}
    container_name: mariadb
    environment:
      - MARIADB_DATABASE=${MARIADB_DATABASE}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
      - MARIADB_PORT=${MARIADB_PORT}
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    volumes:
      - wp_db:/var/lib/mysql
    restart: unless-stopped
    networks:
      - stack_net

  adminer:
    build:
      context: ./requirements/bonus/adminer
    image: ${ADMINER_IMAGE}
    container_name: adminer
    environment:
      - ADMINER_DEFAULT_SERVER=${DATABASE_SERVER}:${MARIADB_PORT}
    depends_on:
      - mariadb
    restart: unless-stopped
    networks:
      - stack_net

  wordpress:
    build:
      context: ./requirements/wordpress
    image: ${WORDPRESS_IMAGE}
    container_name: wordpress
    environment:
      - WORDPRESS_DB_HOST=${DATABASE_SERVER}
      - WORDPRESS_DB_NAME=${MARIADB_DATABASE}
      - WORDPRESS_DB_USER=${MARIADB_USER}
      - WORDPRESS_DB_PORT=${MARIADB_PORT}
      - WORDPRESS_DB_PASSWORD=${MARIADB_PASSWORD}
      - WORDPRESS_PORT=${WORDPRESS_PORT}
      - WORDPRESS_SITE_URL=${WORDPRESS_SITE_URL}
      - WORDPRESS_SITE_TITLE=${WORDPRESS_SITE_TITLE}
      - WORDPRESS_LOCALE=${WORDPRESS_LOCALE}
      - WORDPRESS_ADMIN_USER=${WORDPRESS_ADMIN_USER}
      - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
      - WORDPRESS_ADMIN_PASS=${WORDPRESS_ADMIN_PASS}
      - WORDPRESS_USER=${WORDPRESS_USER}
      - WORDPRESS_USER_EMAIL=${WORDPRESS_USER_EMAIL}
      - WORDPRESS_USER_PASS=${WORDPRESS_USER_PASS}
      - WORDPRESS_REDIS_HOST=${REDIS_HOST}
      - WORDPRESS_REDIS_PORT=${REDIS_PORT}
      - WORDPRESS_REDIS_PASS=${REDIS_PASS}
    volumes:
      - wp_data:/var/www/html
    depends_on:
      - mariadb
      - redis
    restart: unless-stopped
    networks:
      - stack_net

  nginx:
    build:
      context: ./requirements/nginx
    image: ${NGINX_IMAGE}
    container_name: nginx
    environment:
      - DOMAIN=${DOMAIN}
      - UPSTREAM=${UPSTREAM}
      - GENERATE_SELF_SIGNED=${GENERATE_SELF_SIGNED}
      - WORDPRESS_PORT=${WORDPRESS_PORT}
    ports:
      - 443:443
    volumes:
      - ./requirements/nginx/certs:/etc/nginx/certs
      - wp_data:/var/www/html:ro
    depends_on:
      - wordpress
      - adminer
    restart: unless-stopped
    networks:
      - stack_net

  ftp-server:
    build:
      context: ./requirements/bonus/ftp-server
    image: ${FTP_IMAGE}
    container_name: ftp-server
    environment:
      - FTP_USER=${FTP_USER}
      - FTP_PASSWORD=${FTP_PASSWORD}
      - FTP_HOST=${FTP_HOST}
      - FTP_PORT=${FTP_PORT}
      - FTP_PASV_ADDRESS=${FTP_PASV_ADDRESS}
      - FTP_TLS_ENABLE=${FTP_TLS_ENABLE}
    ports:
      - "${FTP_PORT}:21"
      - "21000-21010:21000-21010"
    volumes:
      - wp_data:/var/www/html
    restart: unless-stopped
    networks:
      - stack_net

  website:
    build:
      context: ./requirements/bonus/website
    image: ${WEBSITE_IMAGE}
    container_name: website
    environment:
      - LOGIN=${LOGIN}
    restart: unless-stopped
    networks:
      - stack_net

  redis:
    build:
      context: ./requirements/bonus/redis
    image: ${REDIS_IMAGE}
    container_name: redis
    environment:
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASS=${REDIS_PASS}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - stack_net
      
volumes:
  wp_db:
    name: $WORDPRESS_DB_VOLUME
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $HOST_DATA_DIR/${WORDPRESS_DB_VOLUME}
  wp_data:
    name: $WORDPRESS_DATA_VOLUME
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $HOST_DATA_DIR/${WORDPRESS_DATA_VOLUME}
  redis_data:
    name: $REDIS_DATA_VOLUME
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $HOST_DATA_DIR/${REDIS_DATA_VOLUME}

networks:
  stack_net:
    name: ${STACK_NETWORK}
    driver: bridge