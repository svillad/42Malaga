wc -w << END | tail -n 1 >> output
Este es un ejemplo de texto que contiene algunas palabras repetidas. Palabra Uno Palabra Dos Palabra Tres Uno Dos Tres
END

./pipex tests/file2 "uniq" "wc -l" output
<tests/file2 uniq | wc -l >outfile

./pipex tests/file2 "sort" "uniq" output
<tests/file2 sort | uniq >outfile

./pipex tests/file2 "sor" "uni" output
<tests/file2 sor | uni >outfile

./pipex tests/file0 "uniq" "wc -l" output
<tests/file0 uniq | wc -l >outfile

./pipex tests/file2 "grep -i artificial" "wc -l" output
<tests/file2 grep -i artificial | wc -l >outfile

./pipex tests/file3 "tr '[:lower:]' '[:upper:]'" "grep PIPEX" output
<tests/file3 tr '[:lower:]' '[:upper:]' | grep PIPEX >outfile 


Bonus
./pipex tests/file2 "sort" "uniq" "wc" output
<tests/file2 sort | uniq | wc >outfile

./pipex tests/file2 "sort" "wc" output
<tests/file2 sort | wc >outfile

./pipex tests/file2 "uniq" "wc" output
<tests/file2 uniq | wc >outfile

./pipex tests/file2 "uniq" output
<tests/file2 uniq >outfile

./pipex tests/file2 "uniq" "sort -r" output
<tests/file2 uniq | sort -r >outfile

./pipex tests/file2 "1" "2" "3" output
<tests/file2 1 | 2 | 3 >outfile

./pipex tests/file2 "" "sort" output
<tests/file2 | sort >outfile

./pipex tests/file2 "uniq" "" output
<tests/file2 uniq | >outfile

./pipex tests/file2 "uniq" " " "sort" output
<tests/file2 uniq | | sort >outfile

./pipex tests/file2 output
<tests/file2 >outfile